{"version":2,"kind":"Notebook","sha256":"c4cbaff7ce3f1ac18c85cf0ffe72af5a77e16f30c27e35bc0924955821ea805b","slug":"prr-zarr","location":"/PRR/prr_zarr.ipynb","dependencies":[],"frontmatter":{"title":"ESA Project Results Repository: Generating STAC collections with zarr files","content_includes_title":false,"kernelspec":{"name":"python3","display_name":"pangeo","language":"python"},"license":{"content":{"id":"CC-BY-4.0","url":"https://creativecommons.org/licenses/by/4.0/","name":"Creative Commons Attribution 4.0 International","free":true,"CC":true},"code":{"id":"MIT","url":"https://opensource.org/licenses/MIT","name":"MIT License","free":true,"osi":true}},"github":"https://github.com/ESA-EarthCODE/documentation/tree/main/examples","subject":"EarthCODE Examples","numbering":{"title":{"offset":1}},"edit_url":"https://github.com/ESA-EarthCODE/documentation/tree/main/examples/blob/HEAD/PRR/prr_zarr.ipynb","exports":[{"format":"ipynb","filename":"prr_zarr.ipynb","url":"/pr-preview/pr-13/examples/build/prr_zarr-6bb96c51e3689881546de3a8fa72af46.ipynb"}]},"widgets":{},"mdast":{"type":"root","children":[{"type":"block","kind":"notebook-content","children":[{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"This notebook shows how to generate a valid STAC collection, which is a requirement to upload research outcomes to the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"JGRDDPEKpZ"},{"type":"link","url":"https://eoresults.esa.int/","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"ESA Project Results Repository (PRR)","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"MhUkL2fEAq"}],"urlSource":"https://eoresults.esa.int/","key":"JI5wO48wDn"},{"type":"text","value":". It focuses on generating metadata for a project with zarr data. The product has two zarr files, covering different regions, created using Sentinel 1 and Sentinel 2 data respectively.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"k9IgbOG42R"}],"key":"L4DQ5jHlwq"},{"type":"paragraph","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"Check the ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Wvx7WcJ6BD"},{"type":"link","url":"https://earthcode.esa.int/","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"EarthCODE documentation","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"Ccqw6aDIe5"}],"urlSource":"https://earthcode.esa.int/","key":"lGqDXz4f4J"},{"type":"text","value":", and ","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"PZtfbLx9Aq"},{"type":"link","url":"https://esa-earthcode.github.io/examples/prr-stac-introduction","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"PRR STAC introduction example","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"RHDj0OSBPM"}],"urlSource":"https://esa-earthcode.github.io/examples/prr-stac-introduction","key":"xs9CsP5FRO"},{"type":"text","value":" for a more general introduction to STAC and the ESA PRR.","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"ua7f0Y3kRC"}],"key":"WAU2h84sG9"},{"type":"paragraph","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"The code below demonstrates how to perform the necessary steps using real data from the ESA project ","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"HcZ0pI4D3Q"},{"type":"strong","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"children":[{"type":"text","value":"Yield Prediction and Estimation from Earth Observation (YIPEEO)","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"YxIUNAnmln"}],"key":"ICp30JwrVZ"},{"type":"text","value":". The focus of YIPEEO is to improve field-scale crop yield forecasts through the usage of high-resolution remote sensing data and cutting edge scientific methods.","position":{"start":{"line":8,"column":1},"end":{"line":8,"column":1}},"key":"GzYekAsZku"}],"key":"s8AGJ4sZxT"},{"type":"paragraph","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"ðŸ”— Check the project website: ","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"UtGj9seOJr"},{"type":"link","url":"https://yipeeo.czechglobe.cz/","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"children":[{"type":"text","value":"Yield Prediction and Estimation from Earth Observation (YIPEEO) â€“ Website","position":{"start":{"line":11,"column":1},"end":{"line":11,"column":1}},"key":"mjI9xpGFfA"}],"urlSource":"https://yipeeo.czechglobe.cz/","key":"vGd2nT5B15"}],"key":"ejDvOEwKwX"},{"type":"heading","depth":4,"position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"children":[{"type":"text","value":"Acknowledgment","position":{"start":{"line":14,"column":1},"end":{"line":14,"column":1}},"key":"Vh2NWIzs7C"}],"identifier":"acknowledgment","label":"Acknowledgment","html_id":"acknowledgment","implicit":true,"key":"Xbfc7t1uGJ"},{"type":"paragraph","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"We gratefully acknowledge the ","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mmxbHtkKeU"},{"type":"strong","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"children":[{"type":"text","value":"Yield Prediction and Estimation from Earth Observation (YIPEEO) team","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"mVLuJaZ2Cx"}],"key":"YfNdqP3ZKP"},{"type":"text","value":" for providing access to the data used in this example, as well as support in creating it.","position":{"start":{"line":15,"column":1},"end":{"line":15,"column":1}},"key":"x9EpD64saB"}],"key":"j9eIu080v6"}],"key":"aRX1s7Efht"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# import libraries\nimport xarray as xr\nfrom pystac import Item, Collection\nimport pystac\nfrom datetime import datetime\nfrom shapely.geometry import box, mapping\nfrom xstac import xarray_to_stac\nimport glob\nimport json\nimport shapely\nimport numpy as np\nimport geopandas as gpd\nimport pandas as pd","key":"Zt8wQt4pQG"},{"type":"output","id":"0UIhguxPPNRpunM0sjUPc","data":[],"key":"PHGdPIs50L"}],"key":"okNDpo6BHD"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"1. Generate the parent collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"GAFqCX01v4"}],"identifier":"id-1-generate-the-parent-collection","label":"1. Generate the parent collection","html_id":"id-1-generate-the-parent-collection","implicit":true,"key":"Xfs83lOsXZ"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":4,"column":1}},"children":[{"type":"text","value":"The root STAC Collection provides a general description of all project outputs which will be stored on the PRR.\nThe PRR STAC Collection template enforces some required fields that you need to provide in order to build its valid description. Most of these metadata fields should already be available and can be extracted from your data.","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"gVbtDN9WBF"}],"key":"vyeS4yr4Mr"}],"key":"ISyiLWNcUk"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# create the parent collection\ncollectionid = \"yipeeo-cropyields\"\n\n\ncollection = Collection.from_dict(\n    \n{\n  \"type\": \"Collection\",\n  \"id\": collectionid,\n  \"stac_version\": \"1.1.0\",\n  \"title\": \"Yield Prediction and Estimation features from Sentinel1 and Sentinel2 data\",\n  \"description\": \"This dataset contains the processed Sentinel 1 and Sentinel 2 features used for yield rediction  in the Yield Prediction and Estimation from Earth Observation (YIPEEO) project. Sentinel-2 L2A collection is used to compute a set of features based on the provided bands as well as various vegetation indices. Sentinel-1 data for the years 2016-2023 was pre-processed by TUW RS on the Vienna Scientific Cluster using the software SNAP8 and software packages developed by the TUW RS group.\",\n  \"extent\": {\n    \"spatial\": {\n      \"bbox\": [\n        [\n          4.844270319251073,\n          49.040729923617775,\n          31.01967739451807,\n          52.869947524440924\n        ]\n      ]\n    },\n    \"temporal\": {\n      \"interval\": [\n        [\n          \"2016-01-01T00:00:00Z\",\n          \"2022-12-31T00:00:00Z\"\n        ]\n      ]\n    }\n  },\n  \"license\": \"various\",\n  \"links\": []\n\n}\n\n)\n\ncollection # visualise the metadata of your collection ","key":"Mvj5AmI29P"},{"type":"output","id":"Y8puB88IkB4swWUCFUhx8","data":[],"key":"LCuf9vMVFZ"}],"key":"auWirwiMCC"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2. Create STAC Items and STAC Assets from original dataset","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"toWQfoSSl1"}],"identifier":"id-2-create-stac-items-and-stac-assets-from-original-dataset","label":"2. Create STAC Items and STAC Assets from original dataset","html_id":"id-2-create-stac-items-and-stac-assets-from-original-dataset","implicit":true,"key":"iEHJw7Y6v9"},{"type":"paragraph","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"The second step is to describe the different files as STAC Items and Assets. Take your time to decide how your data should be categorised to improve usability of the data, and ensure intuitive navigation through different items in the collections. There are multiple strategies for doing this and this tutorial demonstrate one of the possible ways of doing that. Examples of how other ESA projects are doing this are available in the ","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"U1BBQ7snqW"},{"type":"link","url":"https://esa-earthcode.github.io/examples/prr-stac-introduction","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"children":[{"type":"text","value":"EarthCODE documentation","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"NnOwBhA2z0"}],"urlSource":"https://esa-earthcode.github.io/examples/prr-stac-introduction","key":"FISgkb5W83"},{"type":"text","value":" .","position":{"start":{"line":3,"column":1},"end":{"line":3,"column":1}},"key":"ranEcB2LwI"}],"key":"uZDZesSMmx"},{"type":"heading","depth":3,"position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"children":[{"type":"text","value":"2.1 Add the Sentinel 1 features to a STAC Item","position":{"start":{"line":5,"column":1},"end":{"line":5,"column":1}},"key":"TNKukuT0BP"}],"identifier":"id-2-1-add-the-sentinel-1-features-to-a-stac-item","label":"2.1 Add the Sentinel 1 features to a STAC Item","html_id":"id-2-1-add-the-sentinel-1-features-to-a-stac-item","implicit":true,"key":"cckXTC3f6q"}],"key":"mNHXkYrC2S"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sentinel1_url = 'https://objectstore.eodc.eu:2222/68e13833a1624f43ba2cac01376a18af:ASP_ZARR/S1_out.zarr'\nds = xr.open_zarr(sentinel1_url)\nds","key":"sDyzXFHP5d"},{"type":"output","id":"eoLowz2fbJ4ceoFA4o_1d","data":[],"key":"O7WPN7iO1Y"}],"key":"R08gXbOF7a"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bbox = (\n    float(ds.min_lon.min().values), \n    float(ds.min_lat.min().values), \n    float(ds.max_lon.max().values), \n    float(ds.max_lat.max().values)\n)\ngeometry = json.loads(json.dumps(shapely.box(*bbox).__geo_interface__))","key":"D5AgXynKSJ"},{"type":"output","id":"nUCVB78xoT6Xb4QqPVne3","data":[],"key":"o03b8V6wnY"}],"key":"deVNUMRs5M"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\ntemplate = {\n    \"id\": f\"{collectionid}-sentinel1-features\",\n    \"type\": \"Feature\",\n    \"stac_version\": \"1.0.0\",\n    \"properties\": {\n        \"title\": \"Sentinel-1 Features\",\n        \"description\": 'Sentinel 1 features for crop yield prediction and estimatation from 2015 to 2022. The processing workflow consists of the following steps:\\n1. Apply precise orbit data\\n2. Border-noise removal\\n3. Radiometric calibration\\n4. Radiometric terrain-flattening\\n5. Range-Doppler terrain correction\\nFor steps 4. and 5. the 30 m Copernicus Digital Elevation Model (DEM) was used. To extract time series on field level from the pre-processed Sentinel-1 data, several further processing steps were performed to mitigate the impact of the viewing geometry and undesired objects within or near the fields. In a first step, an incidence angle normalization to 40\\u00b0 was performed. Afterwards, all pixels below a standard deviation of 5dB within one year were filtered out as they are typically stemming from radar shadow pixels or are no crop pixels. Finally, the cross-ratio was calculated by subtracting VV and VH polarized backscatter. ',\n        \"start_datetime\": pd.to_datetime(ds.time.min().values).strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n        \"end_datetime\": pd.to_datetime(ds.time.max().values).strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n        \"license\": \"CC-BY-4.0\",\n        \"platform\": \"sentinel-1\",\n        \"instruments\": [\"c-sar\"],\n        \"created\": datetime.utcnow().isoformat() + \"Z\"\n    },\n    \"geometry\": geometry,\n    \"bbox\": bbox,\n    \"assets\": {\n        \"data\": {\n            \"href\": \"f'/d/{collectionid}/S1_out.zarr\",  # or local path\n            \"type\": \"application/vnd+zarr\",\n            \"roles\": [\"data\"],\n            \"title\": \"Zarr Store of Sentinel1 Field Stats\"\n        }\n    }\n}\n# 3. Generate the STAC Item\nsentinel1_item = xarray_to_stac(\n    ds,\n    template,\n    temporal_dimension=\"time\",\n    x_dimension=False,\n    y_dimension=False\n)\n\nsentinel1_item.validate()\nsentinel1_item","key":"xu1uNVp3yN"},{"type":"output","id":"iPuDCJpA61IJfPQWKlelf","data":[],"key":"Y7va9VzhN0"}],"key":"vCjw3NMcBV"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":3,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"2.2 Add the sentinel 2 features","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"FmiOMlAkYs"}],"identifier":"id-2-2-add-the-sentinel-2-features","label":"2.2 Add the sentinel 2 features","html_id":"id-2-2-add-the-sentinel-2-features","implicit":true,"key":"XHD4UJ8sxA"}],"key":"vdQ30Cti6v"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"sentinel2_url = 'https://objectstore.eodc.eu:2222/68e13833a1624f43ba2cac01376a18af:ASP_ZARR/S2_out.zarr'\nds = xr.open_dataset(sentinel2_url, engine='zarr')\nds","key":"BotWjnuXGC"},{"type":"output","id":"IPgLDOBtTL6ErV0uy8rd8","data":[],"key":"ZiPVfK8WDX"}],"key":"qPvx844y2Z"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"bbox = (\n    float(ds.min_lon.min().values), \n    float(ds.min_lat.min().values), \n    float(ds.max_lon.max().values), \n    float(ds.max_lat.max().values)\n)\ngeometry = json.loads(json.dumps(shapely.box(*bbox).__geo_interface__))","key":"PS9qUvp3Ik"},{"type":"output","id":"avHyTqYstTGJbFD3RQ0EZ","data":[],"key":"nWtwGMj1wD"}],"key":"SnsiqSDV9y"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"\ntemplate = {\n    \"id\": f\"{collectionid}-sentinel2-features\",\n    \"type\": \"Feature\",\n    \"stac_version\": \"1.0.0\",\n    \"properties\": {\n        \"title\": \"Sentinel-2 Features\",\n        \"description\": 'Sentinel 2 features based on the provided bands as well as various vegetation indices. The Sentinel-2 L2A data cube is dynamically created by utilising the STAC API. The datacube is pre-filter with scenes of a cloud cover less than 80%. The following features are extracted per field and timestamp: Band Medians and Standard Deviations: B02, B03, B04, B05, B06, B07, B08, B8A, B11, B12; Vegetation indices based on median bands of NDVI, EVI, NDWI, NMDI. An outlier removal was added on a field scale level utilising the SCL band and outlier removal based on 2 x inter quartile range (IQR).',\n        \"start_datetime\": pd.to_datetime(ds.time.min().values).strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n        \"end_datetime\": pd.to_datetime(ds.time.max().values).strftime(\"%Y-%m-%dT%H:%M:%SZ\"),\n        \"license\": \"CC-BY-4.0\",\n        \"platform\": \"sentinel-2\",\n        \"instruments\": [\"msi\"],\n        \"created\": datetime.utcnow().isoformat() + \"Z\"\n    },\n    \"geometry\": geometry,\n    \"bbox\": bbox,\n    \"assets\": {\n        \"data\": {\n            \"href\": \"f'/d/{collectionid}/S2_out.zarr\",  # or local path\n            \"type\": \"application/vnd+zarr\",\n            \"roles\": [\"data\"],\n            \"title\": \"Zarr Store of Sentinel2 Field Stats\"\n        }\n    }\n}\n# 3. Generate the STAC Item\nsentinel2_item = xarray_to_stac(\n    ds,\n    template,\n    temporal_dimension=\"time\",\n    x_dimension=False,\n    y_dimension=False\n)\nsentinel2_item.validate()\nsentinel2_item","key":"sEmf32gml1"},{"type":"output","id":"u6M4pd0plYdhJ12qyWG56","data":[],"key":"Gq4RQ6r9on"}],"key":"LXxubTfDMA"},{"type":"block","kind":"notebook-content","children":[{"type":"heading","depth":2,"position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"children":[{"type":"text","value":"3. Add the Items to the collection and Save the metadata as a self-contained collection","position":{"start":{"line":1,"column":1},"end":{"line":1,"column":1}},"key":"dLAyJPhUjv"}],"identifier":"id-3-add-the-items-to-the-collection-and-save-the-metadata-as-a-self-contained-collection","label":"3. Add the Items to the collection and Save the metadata as a self-contained collection","html_id":"id-3-add-the-items-to-the-collection-and-save-the-metadata-as-a-self-contained-collection","implicit":true,"key":"V56pmJASdf"}],"key":"rIOKyngM7p"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collection.add_items([sentinel1_item, sentinel2_item])","key":"gatXw5QefZ"},{"type":"output","id":"BLEkxKcG9U-CYdTcWMH4p","data":[],"key":"cZPvoY2USh"}],"key":"o2er7ffjRE"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"# save the full self-contained collection\ncollection.normalize_and_save(\n    root_href='../../data/yippeo_collection/',\n    catalog_type=pystac.CatalogType.SELF_CONTAINED\n)","key":"RgsMsd3j6c"},{"type":"output","id":"IQr0rezncpjQVfsYNYaKP","data":[],"key":"YpyLrnpBZp"}],"key":"etC1YIqlsN"},{"type":"block","kind":"notebook-code","children":[{"type":"code","lang":"python","executable":true,"value":"collection","key":"H5q4FDHR4g"},{"type":"output","id":"1ZkUkAMp2kmozYWxHOEo5","data":[],"key":"NCFVslnEYI"}],"key":"KzkEIMmSyj"}],"key":"HkNOGDXzVW"},"references":{"cite":{"order":[],"data":{}}},"footer":{"navigation":{"prev":{"title":"Generating a STAC Collection for the PRR","url":"/prr-stac-introduction","group":"EarthCODE Examples"},"next":{"title":"ESA Project Results Repository: Generating STAC collections with multiple assets","url":"/example-tccas","group":"EarthCODE Examples"}}},"domain":"http://localhost:3000"}